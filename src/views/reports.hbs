        <div class="container reports-container">
            <div class="page-header">
                <div class="container">
                   <div class="row">
                      <div class="col-md-12">
                         <h1>Reportes</h1>
                      </div>
                   </div>
                </div>
             </div>

            <div class="kpi-section row">
                <div class="kpi-container col-sm-3">
                    <div id="createdMeetingsKPI" class="kpi">
                        <div class="kpi-header"><h4>Reuniones Creadas</h4></div>
                        <span class="kpi-value">{{meetingsNum}}</span>
                    </div>
                </div>
                <div class="kpi-container col-sm-3">
                    <div id="deletedMeetingsKPI" class="kpi">
                        <div class="kpi-header"><h4 class="kpi-header">Reuniones Eliminadas</h4></div>
                        <span class="kpi-value">{{reunionesEliminadasNum}}</span>
                    </div>
                </div>
                <div class="kpi-container col-sm-3">
                    <div id="averageGPAKPI" class="kpi">
                        <div class="kpi-header"><h4 class="kpi-header">GPA Promedio</h4></div>
                        <span class="kpi-value">{{gpa}}</span>
                    </div>
                </div>
                <div class="kpi-container col-sm-3">
                    <div id="conditionedStudentsKPI" class="kpi">
                        <div class="kpi-header"><h4 class="kpi-header">Estudiantes Condicionados</h4></div>
                        <span class="kpi-value">{{conditionedNum}}</span>
                    </div>
                </div>
            </div>

            <div class="generate-report-section">
                <button id="generateReportButton" class="btn btn-secondary" onclick="generateCSV({{json meetings}})">Generar Reporte</button>     
            </div>

            <div class="section-header header-left">
                   <div class="row">
                      <div class="col-md-12">
                         <h2>Filtros</h2>
                      </div>
                   </div>
             </div>

            <div class="report-filters row">
                <div class="filter col-sm-3">
                    <label for="semesterFilter">Semestre </label>
                    <select id="semesterFilter" name="semester" class="custom-select" onchange="filterBySemester(this)">
                        <option value="0" selected>Todos</option>
                        {{#each semesters}}
                            <option value="{{this.id}}">{{this.semestre}}</option>
                        {{/each}}
                    </select>
                </div> 
            </div>

            <div class="section-header header-left">
                   <div class="row">
                      <div class="col-md-12">
                         <h2>Historial de Reuniones</h2>
                      </div>
                   </div>
             </div>
            <div class="meetings-table-container">
                <table id="meetingsTable"class="table table-hover meetings-table">
                    <thead class="thead-dark">
                        <tr>
                            {{#if isProfessor}}
                                <th scope="col">Número</th>
                                <th scope="col">Tema</th>
                                <th scope="col">Descripción</th>
                                <th scope="col">Fecha</th>
                                <th scope="col">Profesor</th>
                                <th scope="col">Estudiante</th>
                                <th scope="col">Semestre</th>
                                <th scope="col">Estado</th>
                                <th></th>
                                <th></th>
                            {{else }}
                                <th scope="col">Número</th>
                                <th scope="col">Tema</th>
                                <th scope="col">Descripción</th>
                                <th scope="col">Fecha</th>
                                <th scope="col">Profesor</th>
                                <th scope="col">Estudiante</th>
                                <th scope="col">Semestre</th>
                                <th scope="col">Estado</th>

                                <th></th>
                            {{/if}}
                        </tr>
                    </thead>
                    <tbody>
                        {{#if isProfessor}}
                            {{#each meetings}}
                                <tr>
                                    <td scope="row">{{this.id}}</td>
                                    <td>{{this.tema}}</td>
                                    <td>{{this.descripcion}}</td>
                                    <td>{{this.fecha}}</td>
                                    <td>{{this.nombresProfesor}} {{this.apellidosProfesor}}</td>
                                    <td>{{this.nombresEstudiante}} {{this.apellidosEstudiante}}</td>
                                    <td>{{this.semestre}}</td>
                                    <td>{{this.estado}}</td>
                                   {{#if (or this.estadoId 1 this.estadoId 2)}}
                                        <td><a href="/meetings/edit/{{this.id}}">Editar</a></td>
                                        <td><a href="/meetings/delete/{{this.id}}/{{this.estudianteId}}">Eliminar</a></td>
                                    {{else}}
                                        {{#if (or this.estadoId 7 this.estadoId 8)}}
                                            <td><a href="/meetings/meeting-details/{{this.id}}">Ver detalles</a></td>
                                            <td></td>
                                        {{else}}
                                            <td></td>
                                            <td></td>
                                        {{/if}}
                                    {{/if}}
                                </tr>
                            {{/each}}

                        {{else}}
                            {{#each meetings}}
                                <tr>
                                    <td scope="row">{{this.id}}</td>
                                    <td>{{this.tema}}</td>
                                    <td>{{this.descripcion}}</td>
                                    <td>{{this.fecha}}</td>
                                    <td>{{this.nombresProfesor}} {{this.apellidosProfesor}}</td>
                                    <td>{{this.nombresEstudiante}} {{this.apellidosEstudiante}}</td>
                                    <td>{{this.semestre}}</td>
                                    <td>{{this.estado}}</td>
                                    
                                    {{#if (or this.estadoId 7 this.estadoId 8)}}
                                        <td><a href="/meetings/meeting-details/{{this.id}}">Ver detalles</a></td>
                                    {{else}}
                                        <td></td>
                                    {{/if}}
                                </tr>
                            {{/each}}

                        {{/if}}
                    </tbody>
                </table>
            </div>
        
        </div>
        <script>
            function generateCSV(meetings) {

                var data = [];

                meetings.forEach(function(meeting) {
                    data.push([meeting.id, meeting.tema, meeting.descripcion, meeting.fecha, meeting.nombresProfesor + " " + meeting.apellidosProfesor, meeting.nombresEstudiante + " " + meeting.apellidosEstudiante, meeting.estado, meeting.comentariosProfesor, meeting.comentariosEstudiante])
                });

                // sorts meetings by id
                sortByKey(data, '0')

                var csv = 'Numero, Tema, Descripción, Fecha, Profesor, Estudiante, Estado, Comentarios Profesor, Comentarios Estudiante\n';
                data.forEach(function(row) {
                    csv += row.join(',');
                    csv += "\n";
                });

                var hiddenElement = document.createElement('a');
                hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);
                hiddenElement.target = '_blank';
                hiddenElement.download = 'data.csv';
                hiddenElement.click();
            }

            function sortByKey(array, key) {
                return array.sort(function(a, b) {
                    var x = a[key]; var y = b[key];
                    return ((x < y) ? -1 : ((x > y) ? 1 : 0));
                });
            }

            function filterBySemester(semester) {
                console.log("Selected Semester: ", semester.value)

                $.ajax({
                    url: 'http://localhost:4000/reports-by-semester/' + semester.value,
                    type: 'GET',
                    success: function (data) {
                        console.log("Success: ", data)
                        const createdMeetings = document.getElementById("createdMeetingsKPI").childNodes
                        const deletedMeetings = document.getElementById('deletedMeetingsKPI').childNodes
                        const averageGPA = document.getElementById('averageGPAKPI').childNodes
                        const conditionedStudents = document.getElementById('conditionedStudentsKPI').childNodes
                        const meetingsTableBody = document.getElementById('meetingsTable').getElementsByTagName("tbody")[0]

                        console.log("MeetingsTable ", meetingsTable)

                        // modify kpi values
                        var meetingsNum = data.reuniones.length
                        createdMeetings[3].innerHTML = meetingsNum
                        deletedMeetings[3].innerHTML = data.reunionesEliminadas.length
                        averageGPA[3].innerHTML = data.gpa
                        conditionedStudents[3].innerHTML = data.conditionedUsersNum

                        // replace button onclick
                        const reportButton = document.getElementById("generateReportButton")
                        reportButton.setAttribute("onClick", "generateCSV(" + JSON.stringify(data.reuniones) + ")")

                        // generate new data table
                        var newTbody = document.createElement('tbody');
                        var meetingsTable = meetingsTableBody.parentNode
                        meetingsTable.appendChild(newTbody) 
                        meetingsTable.removeChild(meetingsTableBody)

                        addedTableBody = document.getElementById('meetingsTable').getElementsByTagName("tbody")[0]

                        // insert new rows in table 
                        for(var i = 0; i < meetingsNum; i++) {
                            var newRowContent = '<td scope="row">' + data.reuniones[i].id + "</td>" + 
                                    "<td>" + data.reuniones[i].tema + "</td>" + 
                                    "<td>" + data.reuniones[i].descripcion + "</td>" +
                                    "<td>" + data.reuniones[i].fecha + "</td>" + 
                                    "<td>" + data.reuniones[i].nombresProfesor + " " + data.reuniones[i].apellidosProfesor + "</td>" +
                                    "<td>" + data.reuniones[i].nombresEstudiante + " " + data.reuniones[i].apellidosEstudiante + "</td>" +
                                    "<td>" + data.reuniones[i].semestre + "</td>" +
                                    "<td>" + data.reuniones[i].estado + "</td>"
                                    
                            if (data.reuniones[i].estadoId === 7 || data.reuniones[i].estadoId === 8) {
                                newRowContent += "<td><a href=" + `/meetings/meeting-details/${data.reuniones[i].id}` + ">Ver detalles</a></td>"
                            } else {
                                newRowContent += "<td></td>"
                            }

                            var newRow = addedTableBody.insertRow()
                            newRow.innerHTML = newRowContent
                            
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('Error: ' + error.message);
                    }
                })
            }
        </script>